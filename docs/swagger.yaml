definitions:
  model.Authority:
    properties:
      authorityId:
        type: string
      authorityName:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      menus:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
      updatedAt:
        type: string
    type: object
  model.Menu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/model.Authority'
        type: array
      children:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
      component:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      hidden:
        type: boolean
      icon:
        type: string
      id:
        type: integer
      keepAlive:
        type: boolean
      name:
        type: string
      path:
        type: string
      sort:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  model.Users:
    properties:
      active:
        type: boolean
      authority:
        $ref: '#/definitions/model.Authority'
      authorityId:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      headerImg:
        type: string
      id:
        type: integer
      nickname:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  version: ':   1.0'
paths:
  /api/v1/login/:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "data":{"token": "", },"msg":""}'
          schema:
            type: string
      summary: 登录
      tags:
      - 认证登录
  /api/v1/logout/:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "data":{"token": "", },"msg":""}'
          schema:
            type: string
      summary: 注销
      tags:
      - 认证登录
  /api/v1/user/:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户名, 激活状态，头像，角色
        in: body
        name: data
        schema:
          $ref: '#/definitions/model.Users'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户列表
      tags:
      - 用户管理
swagger: "2.0"
